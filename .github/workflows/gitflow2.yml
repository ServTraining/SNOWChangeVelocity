# This is a basic workflow to help you get started with Actions

name: gitflow2

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: "build"
        run: echo "Hello, build!"

  test:
    name: test
    needs: build  
    runs-on: ubuntu-latest
    steps:
      - name: "test"
        run: echo "Hello, test!"

  ProdDeploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    steps:     
      - name: ServiceNow Change
        uses: ServiceNow/servicenow-devops-change@v4.1.0
        id: create
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Deploy'
          change-request: >
            {
              "attributes": {
                "requested_by": "c9b40f2e1bc03d10ddeca7d5624bcb56",
                "assignment_group": "48156a381ba556101509feeccd4bcb94",  
                "short_description": "Automated Software Deployment",
                "description": "Automated Software Deployment.",
                "start_date": "2025-02-07 11:59:59",
                "end_date": "2025-02-09 11:59:59",
                "location": "0141e776db51b1101679c799139619e8",
                "justification": "This is a sample pipeline script to be added in your change step", 
                "implementation_plan": "Software update is tested and results can be found in Test Summaries Tab;",
                "backout_plan": "When software fails in production, the previous software release will be re-deployed.",
                "test_plan": "Testing if the software was successfully deployed",
                "u_communication_plan": "Text here",
                "u_validation_plan": "Text here"
              }
            }
          interval: '100'
          timeout: '3600'
          changeCreationTimeOut: '3600'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true

      - name: Output of Change Creation
        run: echo "change-request-number = ${{ steps.ServiceNowChange.outputs.change-request-number }}" >> $GITHUB_OUTPUT



        
